name: Unity EditMode Comment

on:
  workflow_run:
    workflows:
      - Unity EditMode Suite
    types:
      - completed

permissions:
  issues: write
  contents: read

jobs:
  download-artifacts:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.event == 'pull_request' }}
    outputs:
      results-path: ${{ steps.collect.outputs.results-path }}
      status: ${{ steps.collect.outputs.status }}
    steps:
      - name: Download artifact
        uses: actions/github-script@v7
        id: download
        with:
          script: |
            const runId = context.payload.workflow_run.id;
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: runId,
            });
            const artifact = artifacts.data.artifacts.find(a => a.name === 'editmode-suite');
            if (!artifact) {
              core.warning('editmode-suite artifact not found.');
              return;
            }
            const download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: artifact.id,
              archive_format: 'zip',
            });
            const fs = require('fs');
            const path = require('path');
            const artifactPath = path.join(process.cwd(), 'artifact.zip');
            fs.writeFileSync(artifactPath, Buffer.from(download.data));
            core.setOutput('zip-path', artifactPath);
            core.setOutput('status', context.payload.workflow_run.conclusion);

      - name: Unzip artifact
        if: ${{ steps.download.outputs.zip-path }}
        uses: montudor/action-zip@v1
        with:
          args: unzip -qq "${{ steps.download.outputs.zip-path }}" -d artifact

      - name: Locate test results
        id: collect
        run: |
          if [ -z "${{ steps.download.outputs.zip-path }}" ]; then
            echo "results-path=" >> $GITHUB_OUTPUT
            echo "status=${{ steps.download.outputs.status }}" >> $GITHUB_OUTPUT
            exit 0
          fi
          if [ ! -d artifact ]; then
            echo "::warning::Artifact directory not found." >&2
            echo "results-path=" >> $GITHUB_OUTPUT
            echo "status=${{ steps.download.outputs.status }}" >> $GITHUB_OUTPUT
            exit 0
          fi
          results=$(find artifact -name editmode-results.xml | head -n 1)
          if [ -z "$results" ]; then
            echo "::warning::editmode-results.xml not found." >&2
            echo "results-path=" >> $GITHUB_OUTPUT
          else
            echo "results-path=$results" >> $GITHUB_OUTPUT
          fi
          echo "status=${{ steps.download.outputs.status }}" >> $GITHUB_OUTPUT

  comment-result:
    runs-on: ubuntu-latest
    needs: download-artifacts
    if: ${{ needs.download-artifacts.outputs.results-path != '' }}
    steps:
      - name: Post summary to PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const run = context.payload.workflow_run;
            const prs = run.pull_requests || [];
            if (prs.length === 0) {
              core.info('No pull requests associated with this run.');
              return;
            }
            const status = '${{ needs.download-artifacts.outputs.status }}' === 'success' ? 'PASS' : 'FAIL';
            const resultPath = '${{ needs.download-artifacts.outputs.results-path }}';
            const fs = require('fs');
            let resultSummary = '*Results not available*';
            if (resultPath && fs.existsSync(resultPath)) {
              const xml = fs.readFileSync(resultPath, 'utf8');
              const match = xml.match(/<test-run[^>]*total="(\d+)"[^>]*passed="(\d+)"[^>]*failed="(\d+)"[^>]*skipped="(\d+)"[^>]*result="([^"]+)"/);
              if (match) {
                const [, total, passed, failed, skipped, overall] = match;
                resultSummary = `Total=${total}, Passed=${passed}, Failed=${failed}, Skipped=${skipped} (Result=${overall})`;
              }
            }
            const body = `<!-- unity-editmode-suite -->\n### Unity EditMode Suite\nStatus: **${status}**\n${resultSummary}\n- Workflow: [View Run](${run.html_url})\n- Artifacts: \`editmode-suite\``;
            for (const pr of prs) {
              const {number} = pr;
              const comments = await github.paginate(github.rest.issues.listComments, {
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: number,
              }, response => response.data);
              const existing = comments.find(comment => comment.body && comment.body.includes('<!-- unity-editmode-suite -->'));
              if (existing) {
                await github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: existing.id,
                  body,
                });
              } else {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: number,
                  body,
                });
              }
            }
